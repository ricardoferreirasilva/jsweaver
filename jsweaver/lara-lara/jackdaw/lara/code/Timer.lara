import lara.code.TimerBase;
import lara._JavaTypes;

/**
 * Times the code of a given section.
 * 
 * @param $start [Mandatory] Starting point of the time measure
 * @param prefix Message that will appear before the time measure. If undefined, empty string will be used.
 * @param $end Ending point of the time measure. If undefined, measure is done around starting point.
 * @return name of the variable where the time is stored
 */
Timer.prototype.time = function($start, prefix, $end) {
	var uuid = _JavaTypes.getUuid().randomUUID().toString();
    if (prefix === undefined) {
        var timerStart = 'console.time("' + uuid + '")';
		var timerEnd = 'console.timeEnd("' + uuid + '")';
		$start.insert before timerStart;
		$end.insert after timerEnd;
		return;
    }
    else
    {
    	if(prefix.length != 0){
			var timerStart = 'console.time("' + prefix + '")';
			var timerEnd = 'console.timeEnd("' + prefix + '")';
			println(timerStart);
			$start.insert before timerStart;
			$end.insert after timerEnd;
    	}
    }
}