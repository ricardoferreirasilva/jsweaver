import lara.Strings;
import weaver.WeaverJps;



var predicates=[];
function getRandomPredicate(){
	var index = getRandomInt(0,predicates.length);
	return predicates[index];
}
function addOpaquePredicates($file,number){
	for(i=0;i<number;i++){
		var predicate = generateOpaquePredicate();
		predicates.push(predicate);
		$file.children[0].insert("before",predicate.function);
	
	}
}
function generateOpaquePredicate(method){
	var text = "";
	var functionName = Strings.uuid();
	var value;
	text += "function " + functionName + "(){\n";
	switch(method){
		default:
			text += "return true;\n";
			value = true;
			break;
	}
	text += "}\n";
	return {id:functionName,function:text,value:value,arguments:[]};
}

function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min)) + min;
}